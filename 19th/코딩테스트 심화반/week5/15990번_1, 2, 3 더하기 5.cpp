#include <iostream>

using namespace std;

int dp[100001][3]; // 바로 이전에 더해진 숫자가 1 or 2 or 3인지 파악하기 위함

int main() {
    int T;
    cin >> T;

    dp[1][0] = 1; // 1은 바로 이전에 1이 더해져서 만들어질 수 있음
    dp[2][1] = 1; // 2는 바로 이전에 2가 더해져서 만들어질 수 있음
    dp[3][2] = 1; // 3은 바로 이전에 3이 더해져서 만들어질 수 있음

    for (int i = 1; i <= 100000; i++) {
        for (int j = 0; j < 3; j++) { // j = 0 -> 1, j = 1 -> 2, j = 2 -> 3
            // j가 연속으로 더해지면 안 되기에 (j + 1) % 3과 (j + 2) % 3의 경우만 고려
            int tmp = (dp[i][(j + 1) % 3] + dp[i][(j + 2) % 3]) % 1000000009; 

            // 현재 숫자 i에 j + 1만큼 더해진 위치에 tmp를 추가
            // 또한 이전에 더해진 값을 표시하기 위해 j에 저장
            dp[i + j + 1][j] = (dp[i + j + 1][j] + tmp) % 1000000009; 
        }
    }

    int num;
    while (T--) {
        cin >> num;
        
        // 최대 3 * 1,000,000,008의 값이 나올 수 있기에 오버플로우를 방지하기 위해 1LL을 곱함
        cout << (1LL * dp[num][0] + 1LL * dp[num][1] + 1LL * dp[num][2]) % 1000000009 << "\n";
    }
}